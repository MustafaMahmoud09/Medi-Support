plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk compile_sdk

    defaultConfig {
        multiDexEnabled true
    }

    defaultConfig {
        applicationId "com.damanhour.Graduation.medisupport"
        minSdk min_sdk
        targetSdk max_sdk
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.damanhour.Graduation.medisupport'
}

dependencies {

    //project

    //shared ui
    implementation(project(':libraries:shared-ui'))

    //remote data
    implementation(project(':libraries:core:remote-database:interceptors'))

    //local data
    implementation(project(':libraries:core:local-data:database-creator',))

    //shared preferences access object
    implementation(project(":libraries:core:local-data:shared-preferences-access-object"))

    //shared use case declarations
    implementation(project(':libraries:shered-logic:usecases-declarations'))

    //shared use case execution
    implementation(project(':libraries:shered-logic:usecase-execution'))

    //article
    implementation(project(':features:article:presentation'))
    implementation(project(':features:article:domain:usecase-declarations'))
    implementation(project(':features:article:domain:usecase-execution'))
    implementation(project(':features:article:domain:repository-declarations'))
    implementation(project(':features:article:data:repository-execution'))
    implementation(project(':features:article:domain:mapper-declarations'))
    implementation(project(':features:article:mapper-execution'))
    implementation(project(':features:article:data:data-source:remote-data:requests'))

    //auth
    implementation(project(':features:auth:presentation'))
    implementation(project(':features:auth:domain:usecase-declarations'))
    implementation(project(':features:auth:domain:usecase-execution'))
    implementation(project(':features:auth:domain:repository-declarations'))
    implementation(project(':features:auth:data:repository-execution'))
    implementation(project(':features:auth:data:data-source:remote-data:requests'))

    //blood pressure
    implementation(project(':features:blood-pressure:presentation'))
    implementation(project(':features:blood-pressure:domain:usecase-declarations'))
    implementation(project(':features:blood-pressure:domain:usecase-execution'))
    implementation(project(':features:blood-pressure:domain:repository-declarations'))
    implementation(project(':features:blood-pressure:data:repository-execution'))
    implementation(project(':features:blood-pressure:domain:mapper-declarations'))
    implementation(project(':features:blood-pressure:mapper-execution'))
    implementation(project(':features:blood-pressure:data:data-source:remote-data:requests'))

    //blood sugar
    implementation(project(':features:blood-sugar:presentation'))
    implementation(project(':features:blood-sugar:domain:usecase-declarations'))
    implementation(project(':features:blood-sugar:domain:usecase-execution'))
    implementation(project(':features:blood-sugar:domain:repository-declarations'))
    implementation(project(':features:blood-sugar:data:repository-execution'))
    implementation(project(':features:blood-sugar:domain:mapper-declarations'))
    implementation(project(':features:blood-sugar:mapper-execution'))
    implementation(project(':features:blood-sugar:data:data-source:remote-data:requests'))

    //bmi
    implementation(project(':features:bmi:presentation'))
    implementation(project(':features:bmi:domain:usecase-declarations'))
    implementation(project(':features:bmi:domain:usecase-execution'))
    implementation(project(':features:bmi:domain:repository-declarations'))
    implementation(project(':features:bmi:data:repository-execution'))
    implementation(project(':features:bmi:domain:mapper-declarations'))
    implementation(project(':features:bmi:mapper-execution'))
    implementation(project(':features:bmi:data:data-source:remote-data:requests'))

    //chat
    implementation(project(':features:chat:presentation'))

    //heart prediction
    implementation(project(':features:heart-prediction:presentation'))

    //notification
    implementation(project(':features:notification:presentation'))

    //heart rate
    implementation(project(':features:heart-rate:presentation'))
    implementation(project(':features:heart-rate:domain:usecase-declarations'))
    implementation(project(':features:heart-rate:domain:usecase-execution'))
    implementation(project(':features:heart-rate:domain:repository-declarations'))
    implementation(project(':features:heart-rate:data:repository-execution'))
    implementation(project(':features:heart-rate:domain:mapper-declarations'))
    implementation(project(':features:heart-rate:mapper-execution'))
    implementation(project(':features:heart-rate:data:data-source:remote-data:requests'))

    //offline booking
    implementation(project(':features:offline-booking:presentation'))
    implementation(project(':features:offline-booking:domain:usecase-declarations'))
    implementation(project(':features:offline-booking:domain:usecase-execution'))
    implementation(project(':features:offline-booking:domain:repository-declarations'))
    implementation(project(':features:offline-booking:data:repository-execution'))
    implementation(project(':features:offline-booking:domain:mapper-declarations'))
    implementation(project(':features:offline-booking:mapper-execution'))
    implementation(project(':features:offline-booking:data:data-source:remote-data:requests'))

    //online booking
    implementation(project(':features:online-booking:presentation'))
    implementation(project(':features:online-booking:domain:usecase-declarations'))
    implementation(project(':features:online-booking:domain:usecase-execution'))
    implementation(project(':features:online-booking:domain:repository-declarations'))
    implementation(project(':features:online-booking:data:repository-execution'))
    implementation(project(':features:online-booking:domain:mapper-declarations'))
    implementation(project(':features:online-booking:mapper-execution'))
    implementation(project(':features:online-booking:data:data-source:remote-data:requests'))

    //payment
    implementation(project(':features:payment:presentation'))

    //reminder
    implementation(project(':features:reminder:presentation'))
    implementation(project(':features:reminder:domain:usecase-declarations'))
    implementation(project(':features:reminder:domain:usecase-execution'))
    implementation(project(':features:reminder:domain:repository-declarations'))
    implementation(project(':features:reminder:data:repository-execution'))
    implementation(project(':features:reminder:domain:mapper-declarations'))
    implementation(project(':features:reminder:mapper-execution'))

    //room
    implementation(project(':features:room:presentation'))

    //setting
    implementation(project(':features:account-setting:presentation'))

    //response wrapper
    implementation(project(":libraries:core:remote-database:response-wrapper"))

    //constraint layout
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_layout_version"

    //compose
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //accompanist
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"

    //navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //material 3
    implementation "androidx.compose.material3:material3:$material3_versoin"

    //hilt dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_compose_version"

    //room database
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Splash API
    implementation 'androidx.core:core-splashscreen:1.0.1'

    //facebook sign in
    implementation 'com.facebook.android:facebook-login:latest.release'

}